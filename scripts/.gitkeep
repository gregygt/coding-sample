## -> Code for Lopez-Osario Replication <- ##
## Gregy Tuerah
# ---------------------------------------------------------------------------- #

# Setup
knitr::opts_chunk$set(echo = TRUE)
library(haven)
library(dplyr)
library(car)
library(stargazer)
library(knitr)
library(sandwich)
library(lmtest)
library(purrr)
library(tidyr)
library(AER)
library(knitr)
library(broom)
library(ggplot2)
library(readxl)
library(kableExtra)

setwd("/Users/gregy/Documents/[Spring 2025]/Advanced Program Evaluation/Problem Sets/Problem Set 4")

# 1
df <- read_excel("lopez_osrio.xls")
df <- df %>%
  mutate(chi_sqr = as.numeric(as.character(chi_sqr)),
         coefficient = as.numeric(as.character(coefficient)),
         low_cl = as.numeric(as.character(low_cl)),
         high_cl = as.numeric(as.character(high_cl)),
         present = as.numeric(as.character(present)),
         absent = as.numeric(as.character(absent)),
         missing = as.numeric(as.character(missing)),
         percentage_valid = as.numeric(as.character(percentage_valid))) # this is to make sure that everything is in numeric

kable(df, format = "latex", 
      booktabs = TRUE,
      caption = "Dataframe from Lopez Osrio Study") %>%
  kable_styling(latex_options = c("hold_position", "scale_down"),
                font_size = 8.5
  ) %>%
  landscape() # due to the table size, we need to change it into landscape

# 2
df %>%
  filter(!is.na(significance_lvl)) %>% count()

# 3
df <- df %>%
  mutate(p_value = round((
    pchisq(q = chi_sqr, df = 1, lower.tail = FALSE)), 5)) %>%
  relocate(p_value, .after = chi_sqr)

df %>% filter(p_value < 0.05) %>%
  select(id, variable, significance_lvl, p_value) %>%
  count()

# Plot p_value distribution
ggplot(df, aes(x = p_value)) +
  geom_histogram(aes(y = ..density..),
                 bins = 30,
                 fill = "steelblue",
                 alpha = 0.6,
                 color = "red") +
  stat_function(fun = dunif,
                args = list(min = 0, max = 1),
                color = "grey40",
                size = 1.2,
                inherit.aes = FALSE) +
  coord_cartesian(ylim = c(0, 5)) +
  labs(x = "p_value",
       y = "Density",
       title = "P Value Distribution compare to the Uniform Distribution") +
  theme_minimal()

# 4
# Bonferroni Procedure
df <- df %>%
  mutate(bonferroni_p_values = 0.05/65,     # remember 5% significance
         bonf_sign_lvl = case_when(
           p_value < bonferroni_p_values ~ 1,
           p_value >= bonferroni_p_values ~ 0
         )) %>%
  relocate(bonferroni_p_values, bonf_sign_lvl, .after = p_value)

head(df$bonferroni_p_values, 1) # checking the bonfpv

df %>%
  filter(bonf_sign_lvl == 0) %>%
  select(variable, p_value, bonferroni_p_values) %>%
  kable(type = "simple")

df %>%
  filter(bonf_sign_lvl == 1) %>%
  count()

# 5
# Bejamini-Hochberg Procedure
df <- df %>%
  mutate(bh_p_values = p.adjust(p_value, method = "BH")) %>%   # p.adjust is more efficient command
  relocate(bh_p_values, .after = bonferroni_p_values)

# Plot
df %>%
  arrange(p_value) %>%               
  mutate(
    i      = row_number(),           # remember, i is continuous 
    m      = n(),                    # remember, m is a number
    alpha  = 0.05,                   # 5 percent
    bh_line= i/m * alpha             # remember -- qi/m
  ) %>%
  ggplot(., aes(x = i)) +
  geom_point(aes(y = p_value), color ="midnightblue", size = 1.75) +
  geom_line(aes(y = bh_line), color = "firebrick2", size = 1.25) +
  labs(x = "Ranked test index i",
       y = "P-value, BH threshold",
       title = "BH FDR Correction") +
  theme_classic()

# Calculate how many predictors are significant
df %>%
  filter(bh_p_values <= 0.05) %>% count()

# Expectation of these as false discoveries
expected_false_rejections <- 0.05 * 37
expected_false_rejections

# 6
# FDR and p_value
df_fdr <- df %>%
  arrange(p_value) %>%
  mutate(
    i      = row_number(),           # remember, i is continuous 
    m      = n(),                    # remember, m is a number
    alpha  = 0.05,                   # 5 percent
    qi = i/m * alpha,
    p_i = i/m,
    FDR_i  = pmin(m*p_value/i, 1)    # this is the code I try after discussion with Gabi
  ) %>%
  select(variable, p_value, qi, FDR_i)

kable(df_fdr, format = "latex", caption = "p-value and FDR per variable") %>%
  kable_styling(latex_options = c("hold_position", "scale_down", "landscape"),
                font_size = 10
  )

# 7
# List of tables

df %>%
  mutate(
    singletest = if_else(p_value < 0.05, "Yes", "No"),
    bonferronitest = if_else(bonf_sign_lvl == 1, "Yes", "No"),
    bhtest       = if_else(bh_p_values < 0.05, "Yes", "No")
  ) %>%
  select(id, variable, singletest, bonferronitest, bhtest) %>%
  rename(
    `No` = id,
    `Predictors` = variable,
    `Single Test` = singletest,
    `Bonferroni Test` = bonferronitest,
    `BH Test` = bhtest) %>%
  kable(format = "latex",
        booktabs = TRUE,
        caption = "Results of MLHT") %>%
  kable_styling(latex_options = c("hold_position", "scale_down", "landscape")) %>%
  footnote(
    general = c(
      "“Yes” = reject H0 at 5% level",
      "singletest uses the raw p-value, bonferronitest uses Bonferroni correction, bhtest uses Benjamini–Hochberg FDR"
    ),
    general_title = "Notes:"
  )

df_table <- 
  df %>%
  mutate(
    singletest = if_else(p_value < 0.05, "Yes", "No"),
    bonferronitest = if_else(bonf_sign_lvl == 1, "Yes", "No"),
    bhtest       = if_else(bh_p_values < 0.05, "Yes", "No")
  ) %>%
  select(id, variable, singletest, bonferronitest, bhtest) %>%
  rename(
    `No` = id,
    `Predictors` = variable,
    `Single Test` = singletest,
    `Bonferroni Test` = bonferronitest,
    `BH Test` = bhtest)

# Most Significant
df_table %>%
  filter(`Single Test` == "Yes",
         `Bonferroni Test` == "Yes",
         `BH Test` == "Yes") %>%
  select(Predictors) %>%
  kable(format = "simple", booktabs = TRUE,
        caption = "Most Significant Predictors")

# Least Significant
df_table %>%
  filter(`Single Test` == "No",
         `Bonferroni Test` == "No",
         `BH Test` == "No") %>%
  select(Predictors) %>%
  kable(format = "simple", booktabs = TRUE,
        caption = "Least Significant Predictors")

